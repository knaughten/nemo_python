cos/sin between model grid lines and north pole:
gsint, gcost; similarly for u, v, f grids

rot_rep
pxin, pyin: input vector components
cdtodo: flag for which transformation: E/N to i, E/N to j, ij to E, ij to N (latter 2 is what we care about)
prot: output component (single)
call angle (below) to get gsint etc
to get east component:
   pxin*gcost - pyin*gsint (for t-grid, similarly for other grids)
to get north component:
   pyin*gcost + pxin*gsint (etc)

angle
inputs glamt, gphit, etc for other grids (called plamt, pphit etc)
zxnpt, zynpt, znnpt: x,y components and norm of vector between T point and North Pole; similarly for u, v, f
zxvvt, zyvvt, znvvt: x,y components and norm of vector between adjacent v-points above and below a t-point: similarly for f-points below and above u-point, f-points left and right of v-point, u-points below and above f-point
to calculate:
   zxnpt = -2*cos(glamt*deg2rad)*tan(pi/4 - gphit*deg2rad/2)
   zynpt = -2*sin(glamt*deg2rad)*tan(pi/4 - gphit*deg2rad/2)
   znnpt = zxnpt**2 + zynpt**2
   Repeat for u, v, f grids
   zxvvt = 2*cos(glamv*deg2rad)*tan(pi/4 - gphiv*deg2rad/2) - 2*cos(glamv(j-1)*deg2rad)*tan(pi/4 - gphiv(j-1)*deg2rad/2)
   zyvvt = 2*sin(glamv*deg2rad)*tan(pi/4 - gphiv*deg2rad/2) - 2*sin(glamv(j-1)*deg2rad)*tan(pi/4 - gphiv(j-1)*deg2rad/2)
   znvvt = max(sqrt(znnpt*(zxvvt*2 + zyvvt*2)), 1e-14)
   Repeat for zxffu etc (along j-1), zxffv etc (along i-1), zxuuf etc (along j+1)
   gsint = (zxnpt*zyvvt - zynpt*zxvvt)/znvvt
   gcost = (zxnpt*zxvvt + zynpt*zyvvt)/znvvt
   gsinu = (zxnpu*zyffu - zynpu*zxffu)/znffu
   gcosu = (zxnpu*zxffu + zynpu*zyffu)/znffu
   gsinf = (zxnpf*zyuuf - zynpf*zxuuf)/znuuf
   gcosf = (zxnpf*zxuuf + zynpf*zyuuf)/znuuf
   gsinv = (zxnpv*zxffv + zynpv*zyffv)/znffv
   gcosv = -(zxnpv*zyffv - zynpv*zxffv)/znffv
Identify places where adjacent grid cells differ by less than 1e-8:
	 glamv-glamv(j-1) mod 360 - set gsint=0, gcost=1
	 glamf-glamf(j-1) mod 360 - set gsinu=0, gcosu=1
	 gphif-gphif(i-1) - set gsinv=0, gcosv=1
	 glamu-glamu(j+1) mod 360 - set gsinf=0, gcosf=1
